# Example: SecretProviderClass for SMTP Users
# This uses Google Cloud Secret Manager with the Secrets Store CSI Driver

apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: smtp2graph-users-spc
  namespace: default  # Change to your namespace
spec:
  provider: gcp
  parameters:
    # SMTP users stored as a JSON array in a single secret
    secrets: |
      - resourceName: "projects/YOUR_PROJECT_ID/secrets/smtp2graph-users/versions/latest"
        fileName: "users"

---
# How to create the SMTP users secret in Google Secret Manager:

# Create a JSON file with your users
# cat > users.json <<'EOF'
# [
#   {
#     "username": "app1",
#     "password": "SecurePassword123!",
#     "allowedFrom": ["noreply@example.com", "notifications@example.com"]
#   },
#   {
#     "username": "app2",
#     "password": "AnotherSecurePass456!",
#     "allowedFrom": ["alerts@example.com"]
#   },
#   {
#     "username": "general",
#     "password": "GeneralPassword789!"
#   }
# ]
# EOF

# Create the secret
# gcloud secrets create smtp2graph-users --data-file=users.json

# Grant access to your Kubernetes service account
# gcloud secrets add-iam-policy-binding smtp2graph-users \
#   --member="serviceAccount:YOUR_PROJECT_ID.svc.id.goog[default/smtp-relay]" \
#   --role="roles/secretmanager.secretAccessor"

---
# Alternative: Using Parameter Manager

apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: smtp2graph-users-spc-pm
  namespace: default
spec:
  provider: gcp
  parameters:
    secrets: |
      - resourceName: "projects/YOUR_PROJECT_ID/locations/YOUR_REGION/parameters/smtp2graph-users"
        fileName: "users"

---
# values.yaml configuration to use this SecretProviderClass:

# secrets:
#   smtpUsers:
#     enabled: true
#     useSecretProviderClass: true
#     secretProviderClass:
#       name: "smtp2graph-users-spc"
#       mountPath: "/mnt/secrets-store/users"
#       usersFile: "users"

---
# Note: The users JSON format must match what SMTP2Graph expects
# Each user object can have:
#   - username: (required) SMTP authentication username
#   - password: (required) SMTP authentication password
#   - allowedFrom: (optional) Array of email addresses this user can send from
