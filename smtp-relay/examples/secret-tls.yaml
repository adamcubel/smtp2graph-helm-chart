# Example: TLS Certificate Secret
# This secret contains the TLS certificate and private key for securing
# SMTP connections.

apiVersion: v1
kind: Secret
metadata:
  name: smtp2graph-tls
  namespace: default # Change to your namespace
type: kubernetes.io/tls
stringData:
  # TLS certificate in PEM format
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDXTCCAkWgAwIBAgIJAKZ5P...
    ...your certificate content here...
    -----END CERTIFICATE-----
  # TLS private key in PEM format
  tls.key: |
    -----BEGIN PRIVATE KEY-----
    MIIEvQIBADANBgkqhkiG9w0BAQ...
    ...your private key content here...
    -----END PRIVATE KEY-----

# ---
# Alternative: Create from certificate files
#
# kubectl create secret tls smtp2graph-tls \
#   --cert=./server.crt \
#   --key=./server.key
#
# Or if you have a certificate chain:
#
# kubectl create secret tls smtp2graph-tls \
#   --cert=./fullchain.pem \
#   --key=./privkey.pem

# ---
# Generate a self-signed certificate for testing (NOT for production):
#
# openssl req -x509 -newkey rsa:4096 -keyout server.key -out server.crt \
#   -days 365 -nodes -subj "/CN=smtp.example.com"
#
# kubectl create secret tls smtp2graph-tls \
#   --cert=./server.crt \
#   --key=./server.key
