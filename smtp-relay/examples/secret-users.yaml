# Example: SMTP Users Secret
# This secret contains SMTP user credentials for authentication.
# Users are stored as a JSON array.

apiVersion: v1
kind: Secret
metadata:
  name: smtp2graph-users
  namespace: default  # Change to your namespace
type: Opaque
stringData:
  # JSON array of user objects
  # Each user can have:
  #   - username: (required) SMTP authentication username
  #   - password: (required) SMTP authentication password
  #   - allowedFrom: (optional) Array of email addresses this user can send from
  users: |
    [
      {
        "username": "app1",
        "password": "SecurePassword123!",
        "allowedFrom": ["noreply@example.com", "notifications@example.com"]
      },
      {
        "username": "app2",
        "password": "AnotherSecurePass456!",
        "allowedFrom": ["alerts@example.com"]
      },
      {
        "username": "general",
        "password": "GeneralPassword789!"
      }
    ]

# ---
# Alternative: Create from command line
#
# kubectl create secret generic smtp2graph-users \
#   --from-literal=users='[{"username":"user1","password":"pass1"},{"username":"user2","password":"pass2"}]'
#
# Or from a JSON file:
#
# kubectl create secret generic smtp2graph-users \
#   --from-file=users=./users.json

# ---
# Example users.json file content:
# [
#   {
#     "username": "app1",
#     "password": "SecurePassword123!",
#     "allowedFrom": ["noreply@example.com"]
#   }
# ]
