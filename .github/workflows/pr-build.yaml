name: Build Helm Chart (PR)
on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, edited]
permissions:
  contents: read
  pull-requests: write
  statuses: write
  checks: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0
      - name: Update Helm dependencies
        run: |
          helm dependency update smtp-relay
      - name: Lint Helm chart
        run: |
          helm lint smtp-relay
      - name: Package Helm chart (test only)
        run: |
          helm package smtp-relay
      - name: Template Helm chart (smoke test)
        run: |
          helm template test-release smtp-relay > /dev/null
          echo "‚úÖ Chart templates render successfully"
      - name: Validate PR title has version bump
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "PR Title: $PR_TITLE"

          if [[ ! "$PR_TITLE" =~ \[(major|minor|patch)\] ]]; then
            echo "‚ùå ERROR: PR title must contain [major], [minor], or [patch]"
            echo ""
            echo "Examples:"
            echo "  [major] Breaking change to API"
            echo "  [minor] Add new feature"
            echo "  [patch] Fix bug in deployment"
            echo ""
            exit 1
          fi

          echo "‚úÖ PR title contains version bump indicator"
      - name: Determine next version
        id: version
        run: |
          # Get current version from Chart.yaml
          CURRENT_VERSION=$(grep '^version:' Chart.yaml | awk '{print $2}')
          echo "Current version: $CURRENT_VERSION"

          # Parse version
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"

          # Check PR title for version bump indicator
          PR_TITLE="${{ github.event.pull_request.title }}"

          if [[ "$PR_TITLE" =~ \[major\] ]]; then
            major=$((major + 1))
            minor=0
            patch=0
            BUMP_TYPE="major"
          elif [[ "$PR_TITLE" =~ \[minor\] ]]; then
            minor=$((minor + 1))
            patch=0
            BUMP_TYPE="minor"
          elif [[ "$PR_TITLE" =~ \[patch\] ]]; then
            patch=$((patch + 1))
            BUMP_TYPE="patch"
          fi

          NEW_VERSION="${major}.${minor}.${patch}"
          echo "Next version will be: $NEW_VERSION (${BUMP_TYPE} bump)"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "bump_type=$BUMP_TYPE" >> $GITHUB_OUTPUT
      - name: Create status check - Helm Lint
        if: success() || failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: 'success',
              context: 'Helm Chart / Lint',
              description: 'Helm chart linting passed'
            });
      - name: Create status check - Version Validation
        if: success() || failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: 'success',
              context: 'Helm Chart / Version Bump',
              description: 'Version bump indicator found: ${{ steps.version.outputs.bump_type }}'
            });
      - name: Create status check - Template Rendering
        if: success() || failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: 'success',
              context: 'Helm Chart / Template Rendering',
              description: 'Chart templates render successfully'
            });
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ steps.version.outputs.version }}';
            const bumpType = '${{ steps.version.outputs.bump_type }}';

            let message = '### üîç Helm Chart Build Summary\n\n';
            message += '‚úÖ Chart builds successfully\n';
            message += '‚úÖ Linting passed\n';
            message += '‚úÖ Templates render correctly\n';
            message += '‚úÖ Version bump indicator found\n\n';
            message += `üì¶ **Next version**: \`${version}\` (${bumpType} bump)\n\n`;
            message += 'This version will be applied when the PR is merged to main.';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
